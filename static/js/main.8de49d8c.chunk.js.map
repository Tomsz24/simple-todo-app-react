{"version":3,"sources":["styledComponents/StyledSectionHeader.js","components/SectionHeader.js","styledComponents/StyledForm.js","components/Form.js","components/Header.js","styledComponents/StyledH2.js","components/H2.js","styledComponents/styledTasksList.js","components/TasksList.js","styledComponents/styledSection.js","components/Section.js","App.js","styledComponents/GlobalStyled.js","index.js"],"names":["Section","styled","section","SectionHeader","className","Wrapper","form","Input","input","Button","button","Form","addNewTask","useState","newTask","setNewTask","onSubmit","event","preventDefault","trim","value","type","placeholder","onChange","target","Header","Subtitle","h2","H2","tasks","toggleHideDone","hideDone","setAllDone","length","onClick","disabled","every","done","Item","li","hide","css","Content","p","TaskDoneBtn","RemoveTaskBtn","Ul","ul","TasksList","removeTask","toggleTaskDone","map","task","key","id","content","role","aria-label","MainSection","main","getInitialTasks","tasksFromLocalStorage","localStorage","getItem","JSON","parse","App","setHideDone","setTasks","useEffect","setItem","stringify","Fragment","filter","GlobalStyled","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8de49d8c.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  flex-basis: 80%;\r\n  padding: 25px 15px;\r\n  background-color: #fff;\r\n  border-bottom: 2px solid #ddd;\r\n`;","import React from 'react';\r\nimport { Section } from '../styledComponents/StyledSectionHeader';\r\n\r\nconst SectionHeader = () => {\r\n  return (\r\n    <Section className=\"header__section\">\r\n      <h2>Dodaj nowe zadanie</h2>\r\n    </Section>\r\n  );\r\n}\r\n\r\nexport default SectionHeader;","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.form`\r\n  display: flex;\r\n  background-color: #fff;\r\n  padding: 25px 15px;\r\n  justify-content: space-between;\r\n  border-bottom: 10px solid #ddd;\r\n\r\n  @media (max-width: 767px) {\r\n    flex-wrap: wrap;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  font-size: 20px;\r\n  height: 45px;\r\n  line-height: 35px;\r\n  flex-grow: 1;\r\n  margin-right: 25px;\r\n  padding-left: 15px;\r\n\r\n  @media (max-width: 767px) {\r\n    width: 100%;\r\n    margin-right: 0;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  width: 20vw;\r\n  border: none;\r\n  background-color: teal;\r\n  color: #fff;\r\n  font-size: 20px;\r\n  height: 45px;\r\n  cursor: pointer;\r\n  transition: .3s;\r\n\r\n    &:hover {\r\n    transform: scale(1.12);\r\n}\r\n\r\n@media (max-width: 767px) {\r\n    width: 100%;\r\n    margin-top: 5px;\r\n  }\r\n`;","import React, { useState } from 'react';\r\nimport { Wrapper, Input, Button } from '../styledComponents/StyledForm';\r\n\r\nconst Form = ({ addNewTask }) => {\r\n  const [newTask, setNewTask] = useState(\"\");\r\n\r\n  const onFormSubmit = event => {\r\n    event.preventDefault();\r\n    if (newTask.trim() === \"\") {\r\n      return;\r\n    }\r\n    addNewTask(newTask.trim());\r\n    setNewTask('');\r\n  }\r\n\r\n  return (\r\n    <Wrapper onSubmit={onFormSubmit}>\r\n      <Input value={newTask} type=\"text\" placeholder=\"Co jest do zrobienia?\"\r\n        onChange={({ target }) => setNewTask(target.value)} />\r\n      <Button>Dodaj zadanie</Button>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport SectionHeader from './SectionHeader';\r\nimport Form from './Form';\r\n\r\nconst Header = ({ addNewTask }) => {\r\n  return (\r\n    <header className=\"header\">\r\n      <SectionHeader />\r\n      <Form addNewTask={addNewTask} />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;","import styled from 'styled-components';\r\n\r\nexport const Subtitle = styled.h2`\r\n  width: 100%;\r\n  display: grid;\r\n  grid-template-columns: 1fr auto auto;\r\n  padding: 0 0 15px;\r\n  border-bottom: 2px solid #ddd;\r\n\r\n\r\n  @media (max-width: 767px) {\r\n    grid-template-columns: unset;\r\n    grid-template-rows: auto auto auto;\r\n    justify-content: center;\r\n    padding-bottom: 15px;\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  border: none;\r\n  color: teal;\r\n  background-color: transparent;\r\n  cursor: pointer;\r\n  margin: 5px;\r\n  transition: .3s;\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    color: hsl(180, 100%, 35%);\r\n  }\r\n\r\n  &:disabled {\r\n    color: #ccc;\r\n    cursor: not-allowed;\r\n\r\n    &:hover {\r\n      transform: scale(1);\r\n    }\r\n  }\r\n\r\n  @media (max-width: 767px) {\r\n    margin: 10px;\r\n  }\r\n`;\r\n\r\n\r\n\r\n// .--color {\r\n//   color: #ccc;\r\n// }\r\n\r\n\r\n// .disabled {\r\n//   color: #ccc;\r\n// }\r\n// .disabled:hover {\r\n//   transform: scale(1);\r\n//   color: #ccc;\r\n//   cursor: not-allowed;\r\n// }","import React from 'react';\r\nimport { Button, Subtitle } from '../styledComponents/StyledH2.js';\r\n\r\n\r\nconst H2 = ({ tasks, toggleHideDone, hideDone, setAllDone }) => {\r\n  return (\r\n    tasks.length > 0 && (\r\n      <Subtitle className=\"section__subtitle\">\r\n        Lista zadań\r\n        <Button onClick={toggleHideDone}> {hideDone ? \"Pokaż\" : \"Ukryj\"} ukończone</Button>\r\n\r\n        <Button disabled={tasks.every(({ done }) => done)} onClick={setAllDone} >Ukończ wszystkie</Button>\r\n      </Subtitle>\r\n    ));\r\n}\r\n\r\nexport default H2;","import styled, { css } from 'styled-components';\r\n\r\nexport const Item = styled.li`\r\n  display: flex;\r\n  width: 100%;\r\n  padding: 15px;\r\n  justify-content: space-between;\r\n  border-bottom: 2px solid #ddd;\r\n\r\n  ${({ hide }) => hide && css`\r\n    display: none;\r\n  `}\r\n`;\r\n\r\nexport const Content = styled.p`\r\n  flex-grow: 1;\r\n  padding: 0 10px;\r\n  line-height: 30px;\r\n`;\r\n\r\nexport const TaskDoneBtn = styled.button`\r\n  border: none;\r\n  background-color: green;\r\n  color: #fff;\r\n  width: 30px;\r\n  height: 30px;\r\n  cursor: pointer;\r\n  transition: .3s;\r\n\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n\r\nexport const RemoveTaskBtn = styled.button`\r\n  border: none;\r\n  background-color: red;\r\n  color: #fff;\r\n  width: 30px;\r\n  height: 30px;\r\n  margin-right: 0px;\r\n  cursor: pointer;\r\n  transition: .3s;\r\n\r\n  &:hover {\r\n    transform: scale(1.2);\r\n  }\r\n`;\r\n\r\nexport const Ul = styled.ul`\r\n  padding-top: 15px;\r\n  list-style: none;\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n`;","import React from 'react';\r\nimport { Item, Content, TaskDoneBtn, RemoveTaskBtn, Ul } from '../styledComponents/styledTasksList';\r\n\r\nconst TasksList = ({ tasks, hideDone, removeTask, toggleTaskDone }) => {\r\n  return (\r\n    <Ul>\r\n      {tasks.map(task => (\r\n        <Item\r\n          hide={hideDone && task.done}\r\n          key={task.id}>\r\n          <TaskDoneBtn onClick={() => toggleTaskDone(task.id)}>{task.done ? '✔' : ''}</TaskDoneBtn>\r\n          <Content\r\n          >{task.done ? <s>{task.id}</s> : task.id} - {task.done ? <s>{task.content}</s> : task.content}</Content>\r\n          <RemoveTaskBtn onClick={() => removeTask(task.id)} className=\"section__removeTask\"><span role=\"img\" aria-label=\"bin\">🗑️</span></RemoveTaskBtn>\r\n        </Item\r\n        >\r\n      ))}\r\n    </Ul>\r\n  );\r\n}\r\n\r\nexport default TasksList;","import styled from 'styled-components';\r\n\r\nexport const MainSection = styled.main`\r\n  display: flex;\r\n  flex-basis: 80%;\r\n  padding: 25px 15px;\r\n  background-color: #fff;\r\n  flex-wrap: wrap;\r\n`;","import React from 'react';\r\nimport H2 from './H2';\r\nimport TasksList from './TasksList';\r\nimport { MainSection } from '../styledComponents/styledSection';\r\n\r\nconst Section = ({ toggleHideDone, tasks, hideDone, removeTask, toggleTaskDone, setAllDone }) => {\r\n  return (\r\n    <MainSection className=\"section\">\r\n      <H2 toggleHideDone={toggleHideDone} tasks={tasks} hideDone={hideDone} setAllDone={setAllDone} />\r\n      <TasksList tasks={tasks} hideDone={hideDone} removeTask={removeTask} toggleTaskDone={toggleTaskDone} />\r\n    </MainSection>\r\n  );\r\n}\r\n\r\nexport default Section;","import React, { useState, useEffect } from 'react';\nimport Header from './components/Header';\nimport Section from './components/Section';\n\nconst getInitialTasks = () => {\n  const tasksFromLocalStorage = localStorage.getItem(\"tasks\");\n\n  return tasksFromLocalStorage ? JSON.parse(tasksFromLocalStorage) : [];\n}\n\nfunction App() {\n  const [hideDone, setHideDone] = useState(false);\n  const [tasks, setTasks] = useState(getInitialTasks);\n\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n  }, [tasks]);\n\n\n\n  const toggleHideDone = () => {\n    setHideDone(hideDone => !hideDone)\n  }\n\n\n  const removeTasks = (id) => {\n    setTasks(tasks => tasks.filter(task => task.id !== id));\n  }\n\n\n  const toggleTaskDone = id => {\n    setTasks(tasks => tasks.map(task => {\n      if (task.id === id) {\n        return { ...task, done: !task.done }\n      }\n\n      return task;\n    }))\n  }\n\n\n  const setAllDone = () => {\n    setTasks(tasks => tasks.map(task => ({\n      ...task,\n      done: true,\n    })));\n  }\n\n\n  const addNewTask = (content) => {\n    setTasks(tasks => [\n      ...tasks,\n      {\n        content,\n        done: false,\n        id: tasks.length === 0 ? 1 : tasks[tasks.length - 1].id + 1,\n      },\n    ])\n  }\n\n  return (\n    <React.Fragment>\n      <h1 className=\"title\">Lista zadań</h1>\n      <Header addNewTask={addNewTask} />\n      <Section tasks={tasks} hideDone={hideDone} toggleHideDone={toggleHideDone} removeTask={removeTasks} toggleTaskDone={toggleTaskDone} setAllDone={setAllDone} />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\r\n\r\n\r\nexport const GlobalStyled = createGlobalStyle`\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\n#root {\r\n  margin: 25px;\r\n}\r\nbody {\r\n  font-family: 'Montserrat', sans-serif; \r\n    background-color: #ddd;\r\n    margin: 0 auto;\r\n    min-height: 100vh;\r\n  \r\n}\r\n.title {\r\n  padding: 20px 0;\r\n}\r\n`;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { GlobalStyled } from './styledComponents/GlobalStyled';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GlobalStyled />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}